#!/bin/bash
# Origianl by N4IRS
# mod4whip N8THN
# V1.2 Feb 25
#
# Network interface setup script
#

# Yes/No function for script interaction

# Function calculates number of bit in a netmask
#
mask2cidr() {
    nbits=0
    IFS=.
    for dec in $1 ; do
        case $dec in
            255) let nbits+=8;;
            254) let nbits+=7 ; break ;;
            252) let nbits+=6 ; break ;;
            248) let nbits+=5 ; break ;;
            240) let nbits+=4 ; break ;;
            224) let nbits+=3 ; break ;;
            192) let nbits+=2 ; break ;;
            128) let nbits+=1 ; break ;;
            0);;
            *) echo "Error: $dec is not recognised"; exit 1
        esac
    done
    echo "$nbits"
}

ETH=$(ifconfig | grep ^en | awk -F ':' '{print $1}')

do_static_dhcp_menu() {
  while true; do
    FUNIP=$(whiptail --title "DHCP or Static" --menu "Network addressing options" 20 80 5 --cancel-button Back --ok-button Select \
      "S Static" "Set Static IP addressing" \
      "D DHCP" "Set DHCP addressing" \
      3>&1 1>&2 2>&3)
    RETIP=$?
    if [ $RETIP -eq 1 ]; then
      return
    elif [ $RETIP -eq 0 ]; then
      case "$FUNIP" in
        S\ *) do_set_static ;;
        D\ *) do_set_dhcp ;;
        *) whiptail --msgbox "Whoooops, script error: unrecognized option" 20 60 1 ;;
      esac || whiptail --msgbox "There was an error running option $FUNA" 20 60 1
    fi
  done
  return
}


do_set_static() {
IPADDR=$(whiptail --inputbox "Enter the IP address in the form XXX.XXX.XXX.XXX: " 8 78 3>&1 1>&2 2>&3)
NETMASK=$(whiptail --inputbox "Enter the netmask in the form XXX.XXX.XXX.XXX: " 8 78 3>&1 1>&2 2>&3)
DGW=$(whiptail --inputbox "Enter the default gateway in the form XXX.XXX.XXX.XXX: " 8 78 3>&1 1>&2 2>&3)
PDNS=$(whiptail --inputbox "Enter the address of the primary nameserver in the form XXX.XXX.XXX.XXX: " 8 78 3>&1 1>&2 2>&3)
SDNS=$(whiptail --inputbox "Enter the address of the secondary nameserver in the form XXX.XXX.XXX.XXX: " 8 78 3>&1 1>&2 2>&3)
if (whiptail --yesno "So we have: \n\nIP Address       : $IPADDR\nNetmask          : $NETMASK\nDefault Gateway  : $DGW\nPrimary DNS      : $PDNS\nSecondary DNS    : $SDNS\nhostname is $HOSTN\nDomain Name is $DOMN\nFQDN is $FQDN\n\nSelect yes to continue or no to start over." 30 80); then
# yes, write it
do_static_write
else
# no, re-enter
do_set_static
fi

}

do_static_write() {
numbits=$(mask2cidr $NETMASK)
# write dhcpd.conf
cp -r $DHCPCDPATH $DHCPCDPATH.orig
echo "# define static profile for eth0" >> $DHCPCDPATH
echo "profile static_$ETH" >> $DHCPCDPATH
echo "static ip_address=$IPADDR/$numbits" >> $DHCPCDPATH
echo "static routers=$DGW" >> $DHCPCDPATH
echo "static domain_name_servers=$PDNS, $SDNS" >> $DHCPCDPATH

echo "# define static profile for wlan " >> $DHCPCDPATH0
echo "profile static_wlan0" >> $DHCPCDPATH0
echo "static ip_address=$IPADDR/$numbits" >> $DHCPCDPATH
echo "static routers=$DGW" >> $DHCPCDPATH
echo "static domain_name_servers=$PDNS, $SDNS" >> $DHCPCDPATH

whiptail --msgbox "Finished writing settings for static IP addressing." 10 78
exit 0
}

do_set_dhcp() {

# read /etc/dhcpcd.conf and comment out any static settings.
cp -f /etc/dhcpcd.conf /etc/dhcpcd.conf.static
# profile static_eth0
sed -i 's/^profile static*/#&/' /etc/dhcpcd.conf
# static ip_address=192.168.1.23/24
sed -i 's/^static ip_add*/#&/' /etc/dhcpcd.conf
# static routers=192.168.1.1
sed -i 's/^static router*/#&/' /etc/dhcpcd.conf
# static domain_name_servers=192.168.1.1
sed -i 's/^static domain_nam*/#&/' /etc/dhcpcd.conf

whiptail --msgbox "Commented out any static IP settings in /etc/dhcpcd.conf \nreturning to DHCP IP addressing." 10 78
exit 0

}


########  Main body here


if (whiptail --title "Network setup" --yesno "Network DHCP or Static setup.\n\nDo you want to do this now?" 15 78) then
 ANSWER=$?
else
 ANSWER=$?
fi

if [ $ANSWER = 1 ]
then
        whiptail --msgbox "You may set up your IP address settings later." 8 78
        exit 0
else
do_static_dhcp_menu
fi


